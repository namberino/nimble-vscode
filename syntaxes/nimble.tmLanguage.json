{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "NIMBLE Programming Language",
	"patterns": [
		{
            "include": "#comments"
        },
        {
            "include": "#reserved-words"
        },
        {
            "include": "#classes"
        },
        {
            "include": "#language-constants"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
		{
			"include": "#operators"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
                {
                    "name": "comment.line.double-slash.nimble",
                    "begin": "//",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.nimble"
                        }
                    },
                    "end": "\\n"
			    }
            ]
		},
        "reserved-words": {
            "patterns": [
				{
					"name": "entity.name.function.member.nimble",
                    "match": "\\b(print|fun|input|exit|clock|time|init|super)\\b"
				}
			]
        },
        "classes": {
            "patterns": [
                {
                    "name": "entity.name.class.member.nimble",
                    "match": "\\b(class)\\b"
                }
            ]
        },
        "language-constants": {
            "patterns": [
                {
                    "match": "\\b(true|false)|(nil)\\b",
                    "captures": {
                        "1": {
                            "name": "constant.language.boolean.nimble"
                        },
                        "2": {
                            "name": "constant.character.null.nimble"
                        }
                    }
                }
            ]
        },
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.nimble",
                    "match": "\\b(if|else|while|for|mut|or|and|return|break|this)\\b"
				}
			]
		},
        "strings": {
			"patterns": [
				{
					"name": "string.quoted.double.nimble",
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                        "name": "punctuation.definition.string.begin.nimble"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                        "name": "punctuation.definition.string.end.nimble"
                        }
                    }
				}
			]
		},
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.nimble",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.comparison.nimble",
					"match": "(==|!=|<=|>=|<|>)"
				},
				{
					"name": "keyword.operator.assignment.nimble",
					"match": "(=|:)"
				},
				{
					"name": "keyword.operator.arithmetic.nimble",
					"match": "(\\+|\\-|\\*|/|%)"
				}
			]
		}
	},
	"scopeName": "source.nimble"
}
